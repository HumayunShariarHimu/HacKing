1️⃣ Information

সংজ্ঞা:
Server-Side Template Injection (SSTI) হলো আক্রমণ যেখানে আক্রমণকারী ওয়েব অ্যাপ্লিকেশনের টেমপ্লেট ইঞ্জিনের দুর্বলতা ব্যবহার করে arbitrary code execution করতে পারে।

বৈশিষ্ট্য:

লক্ষ্য: Web applications with server-side template engines (Jinja2, Twig, Freemarker, Velocity)

উদ্দেশ্য: Remote code execution (RCE), data theft, session hijacking

গবেষণার জন্য ব্যবহার: lab simulation, penetration testing, security research


ধাপসমূহ (Attack Lifecycle – গবেষণার দৃষ্টিকোণ)

1. Reconnaissance – Identify template engine type and input points


2. Payload Crafting – lab-only code injection payload creation


3. Exploitation – Inject payload into template input field in lab environment


4. Actions on Objectives – Execute code, read files, or simulate RCE


5. Post-Exploitation – Log responses, evaluate exploit success



টেকনিক:

User input reflection into template without proper sanitization

Server-side expression evaluation exploitation

Payload crafting to execute arbitrary commands

Lab-only file reading / RCE simulation

Sandbox simulation of system commands



---

2️⃣ Method

Lab Setup:

VirtualBox / VMware – isolated lab VM

Kali Linux / Ubuntu VM

Web application sandbox (DVWA, WebGoat, custom Flask/Django app)

Isolated network for SSTI testing


SSTI Simulation:

Deploy lab web app with vulnerable template engine

Identify input fields reflecting user input

Inject safe lab-only payloads for code execution simulation

Capture server responses, log output, and evaluate exploit success


Data Collection & Analysis:

Payload execution success metrics

RCE simulation logs

Statistical analysis: response times, code execution results

Visualization: template injection points, exploit impact


Ethical / Legal Considerations:

All targets and payloads are lab-simulated

Licensed/open-source tools only

Sandbox / isolated network



---

3️⃣ Tools

Computer Tools:

Burp Suite – web traffic interception & input manipulation

DVWA / WebGoat – lab vulnerable apps

Flask / Django sandbox apps for custom SSTI testing

Wireshark – network monitoring for payload responses


Android / Mobile Tools:

Termux – lab scripts & testing

Android Emulator (Android Studio / Genymotion) – lab simulation

Kali NetHunter – mobile lab testing


Software Packages:

Python: requests, Jinja2 / Mako template testing, selenium (lab payload simulation)

Nmap – service discovery

Wireshark – packet capture & analysis

SQLite / DB tools – logging payload execution results


Hardware / Lab Setup:

VirtualBox / VMware / Proxmox

Android Emulator / lab devices

Router / Switch testbed for isolated lab network


References / Research Sources:

OWASP SSTI Guidelines

NIST SP 800-95 (Guide to Secure Web Services)

MITRE ATT&CK T1221 – Template Injection / Remote Code Execution

IEEE / ACM Digital Library – SSTI research papers


