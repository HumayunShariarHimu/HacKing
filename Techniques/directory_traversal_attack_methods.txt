Directory Traversal Attack করার কৌশল ও টেকনিক

Directory Traversal Attack (ডিরেক্টরি ট্র্যাভার্সাল আক্রমণ) এমন একটি আক্রমণ, যেখানে আক্রমণকারী একটি ওয়েব অ্যাপ্লিকেশন বা সিস্টেমের ফাইল সিস্টেমের বাইরে অবস্থিত ফাইলগুলোতে অবৈধভাবে অ্যাক্সেস লাভ করতে সক্ষম হয়। এটি সাধারণত তখন ঘটে যখন ওয়েব অ্যাপ্লিকেশন ফাইল পাথ বা URL প্যারামিটার হিসেবে ইনপুট গ্রহণ করে এবং সঠিকভাবে ফাইল পাথ ভ্যালিডেশন না করে। এই আক্রমণে ../ (dot-dot-slash) ব্যবহার করে আক্রমণকারী ফাইল সিস্টেমের নির্দিষ্ট জায়গায় পৌঁছাতে পারে।

Directory Traversal Attack করার কৌশল:

1. URL প্যারামিটার ব্যবহার করা: অধিকাংশ ওয়েব অ্যাপ্লিকেশন URL প্যারামিটার হিসেবে ফাইল পাথ গ্রহণ করে থাকে। উদাহরণস্বরূপ, একটি URL যে ফাইল পাথ প্রদর্শন করে:

http://example.com/viewfile.php?file=images/profile.jpg

এই URL তে file প্যারামিটারটি ব্যবহারকারীকে ছবি ফাইল দেখানোর জন্য ব্যবহার করা হয়। আক্রমণকারী এই প্যারামিটারটির মাধ্যমে ফাইল পাথ পরিবর্তন করে:

http://example.com/viewfile.php?file=../../../../etc/passwd

এতে আক্রমণকারী /etc/passwd ফাইলের অ্যাক্সেস পেতে পারে, যা সিস্টেমের পাসওয়ার্ড এবং ইউজার ডেটা ধারণ করে।


2. Dot-Dot-Slash (../) ব্যবহার করা: আক্রমণকারী ../ ব্যবহার করে সিস্টেমের ফাইল সিস্টেমের অন্যান্য ডিরেক্টরিতে প্রবেশ করতে পারে। এই পদ্ধতি ফাইল সিস্টেমের বর্তমান ডিরেক্টরি থেকে এক বা একাধিক স্তরের উপরে চলে যেতে সাহায্য করে। উদাহরণ:

../../../../etc/passwd - এই পাথের মাধ্যমে আক্রমণকারী সিস্টেমের গুরুত্বপূর্ণ ফাইল passwd পর্যন্ত পৌঁছাতে পারে।



3. URL এনকোডিং ব্যবহার করা: আক্রমণকারী বিশেষ অক্ষর যেমন ../ বা / কে এনকোডিং ব্যবহার করে ফাইল সিস্টেমে পাথ ট্র্যাভার্সাল করতে পারে। উদাহরণস্বরূপ, ../ কে এনকোড করা হতে পারে %2e%2e%2f। এই কৌশলটি কিছুক্ষেত্রে সিস্টেমের ফাইল পাথ ট্র্যাভার্সাল যাচাই বাধা অতিক্রম করতে সাহায্য করতে পারে।

http://example.com/viewfile.php?file=%2e%2e%2e%2fetc%2fpasswd


4. টেমপ্লেট বা কোড ইনজেকশন:
কিছু অ্যাপ্লিকেশনে, আক্রমণকারী কোড ইনজেকশন প্রযুক্তি ব্যবহার করে ডিরেক্টরি ট্র্যাভার্সাল আক্রমণ চালাতে পারে। যেমন:

ফাইল ইনক্লুড বা লোড ফাংশন ব্যবহারকারী ইনপুটের মাধ্যমে ফাইল লোড করার অনুমতি দেয় এবং আক্রমণকারী এই ফাংশনে পাথ ইনজেক্ট করতে পারে।


উদাহরণ:
file_get_contents($_GET['file']);
আক্রমণকারী file প্যারামিটার হিসেবে ../../../../etc/passwd প্রদান করে সিস্টেমের গুরুত্বপূর্ণ ফাইল অ্যাক্সেস করতে পারে।


5. ক্যাশিং এবং ডাইরেক্টরি লিস্টিং:
কিছু সিস্টেম ক্যাশিং ব্যবহার করে থাকে, যেখানে পূর্ববর্তী অনুরোধের ফলাফল সংরক্ষণ করা হয়। আক্রমণকারী কখনও কখনও ক্যাশ করা পেজগুলির মধ্যে ডিরেক্টরি ট্র্যাভার্সাল শোষণ করতে পারে এবং সেখান থেকে ফাইল সিস্টেমের তথ্য চুরি করতে পারে।



Directory Traversal Attack-এর জন্য বিশেষ টেকনিক:

1. Automated Scanning Tools: আক্রমণকারীরা এই ধরনের আক্রমণ চালানোর জন্য কিছু টুল ব্যবহার করতে পারে যা অটোমেটিকভাবে ভ্যারিয়েবল ইনপুটগুলির মধ্যে ডিরেক্টরি ট্র্যাভার্সাল চেক করে। কিছু জনপ্রিয় টুল:

Burp Suite: এটি প্যাকেট ইঞ্জেকশন এবং প্যারামিটার রিডাইরেকশন করার জন্য ব্যবহৃত হয়।

Nikto: এটি ওয়েব সার্ভারের দুর্বলতা স্ক্যান করে, এবং ডিরেক্টরি ট্র্যাভার্সাল যেমন সমস্যা শনাক্ত করতে পারে।

OWASP ZAP: এটি একটি নিরাপত্তা টুল যা ওয়েব অ্যাপ্লিকেশন স্ক্যান করে এবং ডিরেক্টরি ট্র্যাভার্সাল পাথ চেক করে।



2. Brute Force পদ্ধতি ব্যবহার করা:
আক্রমণকারীরা brute force কৌশল ব্যবহার করে সম্ভাব্য ফাইল পাথ, ফোল্ডার নেম, এবং ইনপুট প্যারামিটার পাসওয়ার্ড এবং পাথের জন্য পরীক্ষা করতে পারে।


3. লগ ফাইল এবং কনফিগারেশন ফাইল চুরি করা:
ডিরেক্টরি ট্র্যাভার্সাল আক্রমণের মাধ্যমে আক্রমণকারী সিস্টেমের লগ ফাইল, কনফিগারেশন ফাইল বা অন্যান্য সংবেদনশীল ডেটা অ্যাক্সেস করতে পারে।


4. Path Traversal দিয়ে Shell বা Code Execution:
কিছু ক্ষেত্রে আক্রমণকারী ../../../../ ব্যবহার করে এমন ফাইল অ্যাক্সেস করতে পারে যেখানে কোড এক্সিকিউশন চালানো সম্ভব। উদাহরণস্বরূপ, /bin/sh বা /usr/bin/python ফাইলটি এক্সিকিউট করা যেতে পারে।



কিভাবে Directory Traversal Attack প্রতিরোধ করবেন?

1. ইনপুট ভ্যালিডেশন:
ব্যবহারকারীর ইনপুট যথাযথভাবে যাচাই করতে হবে। বিশেষ করে পাথ প্যারামিটারগুলি যেমন ../ বা \..\ ব্লক করা উচিত।


2. নির্দিষ্ট ডিরেক্টরি পাথ:
ওয়েব অ্যাপ্লিকেশন বা সার্ভারের মাধ্যমে কেবলমাত্র নির্দিষ্ট ডিরেক্টরি পাথের মধ্যে ফাইল অ্যাক্সেস সীমাবদ্ধ করা উচিত। এগুলি সিস্টেমের বাইরের কোনও ফাইল অ্যাক্সেস করতে পারবে না।


3. ফাইল সিস্টেমের নিরাপত্তা:
সিস্টেমের ফাইল সিস্টেমের প্রতি নিরাপত্তা ব্যবস্থা নেওয়া উচিত। সিস্টেমের গুরুত্বপূর্ণ ফাইলগুলির জন্য সঠিক অনুমতি নির্ধারণ করা উচিত।


4. এনকোডিং:
ইনপুটের মধ্যে স্পেশাল চিহ্ন যেমন /, ../ অথবা \.. এনকোডিং করা উচিত যাতে সেগুলি কার্যকরী না হয়।


5. কনফিগারেশন ফাইলের সুরক্ষা:
সিস্টেমের কনফিগারেশন ফাইলগুলিকে নিরাপদ স্থানে রাখা এবং তাদের জন্য সঠিক অনুমতি নির্ধারণ করতে হবে।


ডিরেক্টরি ট্র্যাভার্সাল আক্রমণ প্রতিরোধের জন্য আরও কৌশল:

৬. পাথ স্যানিটাইজেশন:

ইনপুট প্যারামিটার বা ফাইল পাথগুলো স্যানিটাইজ করে যে কোনো অপ্রত্যাশিত বা অবাঞ্ছিত ইনপুট (যেমন ../, ..\, %2e%2e%2f বা অন্যান্য এনকোডেড আক্রমণ) নিষিদ্ধ করুন। এর ফলে আক্রমণকারীদের জন্য ফাইল পাথ পরিবর্তন করা কঠিন হয়ে যাবে।


৭. ওয়েব সার্ভার কনফিগারেশন:

ওয়েব সার্ভারের কনফিগারেশন ফাইলগুলো সঠিকভাবে কনফিগার করুন, যেমন Apache বা Nginx, যাতে সেগুলিতে শুধুমাত্র নির্দিষ্ট ডিরেক্টরি থেকে ফাইল অ্যাক্সেস করা সম্ভব হয়। অন্যান্য ডিরেক্টরির সাথে ওয়েব সার্ভারকে যোগাযোগ করতে দেবেন না।


৮. ফাইল এক্সটেনশন চেক:

শুধুমাত্র নির্দিষ্ট এক্সটেনশনের ফাইলগুলো অ্যাক্সেস করা অনুমোদন করুন, যেমন .jpg, .png, .pdf বা .html। যদি কোনো ব্যবহারকারী অন্য ফাইল এক্সটেনশন যেমন .php, .exe, .sh পাঠানোর চেষ্টা করে, তবে তা ব্লক করুন।


৯. URL রিডিরেকশন ব্লক করা:

কিছু ওয়েব অ্যাপ্লিকেশন ইউআরএল রিডিরেকশন বা রাইভাইজ রিডিরেকশন সাপোর্ট করে। এটি ব্যবহার করে আক্রমণকারী নির্দিষ্ট পাথ থেকে রিডিরেক্ট হয়ে অ্যাক্সেস করতে পারে। তাই আপনি এই ধরনের রিডিরেকশন নিষিদ্ধ করবেন।


১০. পছন্দসই ফাইল পাথ নির্ধারণ:

সিস্টেমের নিরাপত্তা বাড়ানোর জন্য শুধু ওয়েব সার্ভারে ফাইলের জন্য নির্দিষ্ট পাথ সহকারী ডিরেক্টরি বানানো উচিত। এর মাধ্যমে অন্য কোথাও ফাইল অ্যাক্সেস করার চেষ্টা করা হবে না।



প্র্যাকটিস ল্যাব (Lab Setup) - Directory Traversal Attack:

এখন একটি সিম্পল প্র্যাকটিস ল্যাব তৈরি করা যাক যেখানে আপনি ডিরেক্টরি ট্র্যাভার্সাল আক্রমণের মাধ্যমে সিস্টেমের ফাইলগুলো এক্সপ্লয়েট করতে পারবেন।

১. DVWA (Damn Vulnerable Web Application):

DVWA হলো একটি নিরাপত্তা প্রশিক্ষণ প্ল্যাটফর্ম যা ওয়েব অ্যাপ্লিকেশন নিরাপত্তার বিভিন্ন দুর্বলতা (যেমন ডিরেক্টরি ট্র্যাভার্সাল) প্র্যাকটিস করতে সহায়তা করে। DVWA সেটআপ করে আপনি বিভিন্ন আক্রমণ কৌশল শিখতে পারেন।

DVWA সেটআপ:

Step 1: DVWA ডাউনলোড করুন: DVWA GitHub

Step 2: XAMPP বা LAMP স্ট্যাক ব্যবহার করে আপনার লোকাল মেশিনে DVWA ইনস্টল করুন।

Step 3: DVWA অ্যাপ্লিকেশন খুলুন এবং "Directory Traversal" আক্রমণ কৌশল প্র্যাকটিস করুন।



২. হালকা আক্রমণ পরীক্ষা (Burp Suite ব্যবহার করে):

Burp Suite একটি শক্তিশালী ওয়েব সিকিউরিটি টুল যা ওয়েব অ্যাপ্লিকেশন ভ্যালিডেশন ত্রুটি শনাক্ত করতে সহায়তা করে। এর মাধ্যমে আপনি ওয়েব অ্যাপ্লিকেশনের প্যারামিটার ইনপুট পরীক্ষা করতে পারেন এবং ডিরেক্টরি ট্র্যাভার্সাল ইনজেকশন সনাক্ত করতে পারবেন।


Burp Suite স্টেপ বাই স্টেপ:

Step 1: Burp Suite ডাউনলোড ও ইনস্টল করুন: Burp Suite

Step 2: একটি ব্রাউজার প্রক্সি সেটআপ করুন (উদাহরণস্বরূপ, Firefox বা Chrome এ ব্রাউজার প্রক্সি সেটিংস ব্যবহার করুন)।

Step 3: Burp Suite খুলুন এবং ‘Intercept’ মোডে প্যারামিটার পরিবর্তন করে ডিরেক্টরি ট্র্যাভার্সাল পরীক্ষা করুন।

Step 4: ../ ব্যবহার করে পাথ ট্র্যাভার্সাল শোষণ করুন এবং সিস্টেম ফাইলগুলি দেখতে চেষ্টা করুন।


৩. ফাইল সিস্টেমের ভ্যালিডেশন টেস্টিং (Python ব্যবহার করে):

আপনি Python স্ক্রিপ্ট ব্যবহার করে সিস্টেমের মধ্যে ফাইল পাথ সঠিকভাবে ভ্যালিডেশন না করলে আক্রমণ করতে পারেন। উদাহরণস্বরূপ, আপনি একটি Python স্ক্রিপ্ট লিখতে পারেন যা সিস্টেমের গুরুত্বপূর্ণ ফাইল অ্যাক্সেস করার জন্য ডিরেক্টরি ট্র্যাভার্সাল ইনপুট দেয়।


import requests

url = 'http://example.com/viewfile.php?file=../../../../etc/passwd'
response = requests.get(url)
print(response.text)


---

উপসংহার:

ডিরেক্টরি ট্র্যাভার্সাল আক্রমণ ওয়েব অ্যাপ্লিকেশনগুলোর জন্য একটি গুরুতর নিরাপত্তা ঝুঁকি হতে পারে, এবং এটি সহজে ব্যবহারকারীর ইনপুট যাচাই না করার কারণে সিস্টেমের গুরুত্বপূর্ণ ফাইলগুলিতে প্রবেশের সুযোগ সৃষ্টি করতে পারে। সঠিকভাবে ইনপুট ভ্যালিডেশন, ফাইল পাথ স্যানিটাইজেশন এবং অন্যান্য সিকিউরিটি প্র্যাকটিস ব্যবহার করে এই আক্রমণ প্রতিরোধ করা সম্ভব। বাস্তব জীবনে ওয়েব অ্যাপ্লিকেশনগুলোর জন্য এগুলো প্র্যাকটিস করে, আপনি আক্রমণগুলো সনাক্ত ও প্রতিরোধ করার দক্ষতা অর্জন করতে পারবেন।


